<div class="reference-class">




</div>








	<div class="reference-members"><h2>Static Methods</h2>
		
			
<div id="compile-code" class="member">
<div class="member-link">
<a name="compile-code" href="#compile-code"><tt><b>PaperScript.compile</b>(code)</tt></a>
</div>
<div class="member-description hidden">
<div class="member-text">
	<p>Compiles PaperScript code into JavaScript code.</p>
	
<ul><b>Parameters:</b>

<li>
<tt>code:</tt> 
<tt>String</tt>
&mdash;&nbsp;The PaperScript code.

</li>

</ul>

	
	<ul><b>Returns:</b>
	
		<li>
<tt><tt>String</tt></tt>&nbsp;&mdash;&nbsp;The compiled PaperScript as JavaScript code.
</li>
	
	</ul>

	
	
</div>
</div>
</div>
		
			
<div id="evaluate-code-scope" class="member">
<div class="member-link">
<a name="evaluate-code-scope" href="#evaluate-code-scope"><tt><b>PaperScript.evaluate</b>(code, scope)</tt></a>
</div>
<div class="member-description hidden">
<div class="member-text">
	<p>Evaluates parsed PaperScript code in the passed <a href="/reference/paperscope"><tt>PaperScope</tt></a>
object. It also installs handlers automatically for us.</p>
	
<ul><b>Parameters:</b>

<li>
<tt>code:</tt> 
<tt>String</tt>
&mdash;&nbsp;The PaperScript code.

</li>

<li>
<tt>scope:</tt> 
<a href="/reference/paperscript"><tt>PaperScript</tt></a>
&mdash;&nbsp;The scope in which the code is executed.

</li>

</ul>

	
	<ul><b>Returns:</b>
	
		<li>
<tt><tt>Object</tt></tt>&nbsp;&mdash;&nbsp;The result of the code evaluation.
</li>
	
	</ul>

	
	
</div>
</div>
</div>
		
	</div>


