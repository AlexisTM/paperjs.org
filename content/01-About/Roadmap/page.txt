<title>Roadmap</title>

Paper.js is a young library, with plans for many more features. While a lot of the core functionality is already there and works well, some features are still missing. Here an overview of the planned additions. It might be that at the time of reading this, some of these are already implemented and the list was not updated yet, so also check the nightly builds.

<title>Implemented</title>
- SVG importing / exporting.
- JSON data format for persistence.
- Fast <url http://scriptographer.org/tutorials/paths/geometric-tests/#finding-path-intersections>Path intersections</url> using BÃ©zier fat-line clipping.
- <url http://scriptographer.org/tutorials/paths/geometric-operations/>Boolean geometric path operations</url>, such as union, intersection, exclusion, etc.
- <url http://scriptographer.org/tutorials/document-items/hit-tests/>Hit Test</url> graphic items and add mouse event handlers to them, for simple and powerful interactivity.
- Running Paper.js in <url http://nodejs.org/>Node.js</url>.

<title>Nearly Finished</title>
- <url http://scriptographer.org/tutorials/user-interface/interface-components/>Simple user interfaces</url> that allow your users to tweak values in your script.

<title>Planned</title>
- Parametrizable path offsetting / stroking, to expand strokes to outlines and optionally produce all kinds of expressive strokes easily.
- Selectors similar to CSS for matching items in your Paper.js document.
-  Direct importing of drawings from Adobe Illustrator through JSON and ExtendScript.
- Typography using SVG fonts, with support for advanced typographic features such as type inside graphic shapes and along paths, with control over styles of sub-ranges of text.
- PDF importing / exporting.
- Running Paper.js apps stand-alone through a native, hardware accelerated Runtime that embeds a JavaScript engine.